export function toEpochDate(date) {
    return Math.floor(date.getTime() / (24 * 60 * 60 * 1000));
}
export class DateRange {
    constructor(from, to) {
        if (toEpochDate(from) > toEpochDate(to)) {
            throw new Error(`Invalid date range (from: ${from}, to: ${to})`);
        }
        this.from = from;
        this.to = to;
    }
    doesInclude(tgt) {
        if (tgt instanceof Date) {
            return toEpochDate(this.from) <= toEpochDate(tgt) &&
                toEpochDate(tgt) <= toEpochDate(this.to);
        }
        else {
            return this.doesInclude(tgt.from) && this.doesInclude(tgt.to);
        }
    }
}
class RangeEntry {
}
class DateEntry {
}
class TaskEntry {
}
export function isTabIndent(lines) {
    return lines.find((line) => line.startsWith('\t')) !== undefined;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibGliLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sVUFBVSxXQUFXLENBQUMsSUFBVTtJQUNyQyxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUMzRCxDQUFDO0FBRUQsTUFBTSxPQUFPLFNBQVM7SUFJckIsWUFBWSxJQUFVLEVBQUUsRUFBUTtRQUMvQixJQUFJLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxXQUFXLENBQUMsRUFBRSxDQUFDLEVBQUU7WUFDeEMsTUFBTSxJQUFJLEtBQUssQ0FBQyw2QkFBNkIsSUFBSSxTQUFTLEVBQUUsR0FBRyxDQUFDLENBQUM7U0FDakU7UUFDRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQztJQUNkLENBQUM7SUFFRCxXQUFXLENBQUMsR0FBcUI7UUFDaEMsSUFBSSxHQUFHLFlBQVksSUFBSSxFQUFFO1lBQ3hCLE9BQU8sV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxXQUFXLENBQUMsR0FBRyxDQUFDO2dCQUNoRCxXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUMxQzthQUFNO1lBQ04sT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUM5RDtJQUNGLENBQUM7Q0FDRDtBQVdELE1BQU0sVUFBVTtDQUlmO0FBRUQsTUFBTSxTQUFTO0NBSWQ7QUFFRCxNQUFNLFNBQVM7Q0FHZDtBQUVELE1BQU0sVUFBVSxXQUFXLENBQUMsS0FBZTtJQUMxQyxPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxTQUFTLENBQUM7QUFDbEUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiB0b0Vwb2NoRGF0ZShkYXRlOiBEYXRlKTogbnVtYmVyIHtcblx0cmV0dXJuIE1hdGguZmxvb3IoZGF0ZS5nZXRUaW1lKCkgLyAoMjQgKiA2MCAqIDYwICogMTAwMCkpO1xufVxuXG5leHBvcnQgY2xhc3MgRGF0ZVJhbmdlIHtcblx0ZnJvbTogRGF0ZTtcblx0dG86IERhdGU7XG5cblx0Y29uc3RydWN0b3IoZnJvbTogRGF0ZSwgdG86IERhdGUpIHtcblx0XHRpZiAodG9FcG9jaERhdGUoZnJvbSkgPiB0b0Vwb2NoRGF0ZSh0bykpIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBkYXRlIHJhbmdlIChmcm9tOiAke2Zyb219LCB0bzogJHt0b30pYCk7XG5cdFx0fVxuXHRcdHRoaXMuZnJvbSA9IGZyb207XG5cdFx0dGhpcy50byA9IHRvO1xuXHR9XG5cblx0ZG9lc0luY2x1ZGUodGd0OiBEYXRlIHwgRGF0ZVJhbmdlKTogYm9vbGVhbiB7XG5cdFx0aWYgKHRndCBpbnN0YW5jZW9mIERhdGUpIHtcblx0XHRcdHJldHVybiB0b0Vwb2NoRGF0ZSh0aGlzLmZyb20pIDw9IHRvRXBvY2hEYXRlKHRndCkgJiZcblx0XHRcdFx0dG9FcG9jaERhdGUodGd0KSA8PSB0b0Vwb2NoRGF0ZSh0aGlzLnRvKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmV0dXJuIHRoaXMuZG9lc0luY2x1ZGUodGd0LmZyb20pICYmIHRoaXMuZG9lc0luY2x1ZGUodGd0LnRvKTtcblx0XHR9XG5cdH1cbn1cblxuaW50ZXJmYWNlIE5vZGUge1xuXHRwYXJlbnQ6IE5vZGU7XG59XG5cbmludGVyZmFjZSBJbm5lck5vZGUgZXh0ZW5kcyBOb2RlIHtcblx0cGFyZW50OiBOb2RlO1xuXHRjaGlsZHJlbjogTm9kZVtdO1xufVxuXG5jbGFzcyBSYW5nZUVudHJ5IGltcGxlbWVudHMgSW5uZXJOb2RlIHtcblx0cmFuZ2U6IERhdGVSYW5nZTtcblx0cGFyZW50OiBOb2RlO1xuXHRjaGlsZHJlbjogTm9kZVtdO1xufVxuXG5jbGFzcyBEYXRlRW50cnkgaW1wbGVtZW50cyBJbm5lck5vZGUge1xuXHRkYXRlOiBEYXRlO1xuXHRwYXJlbnQ6IE5vZGU7XG5cdGNoaWxkcmVuOiBOb2RlW107XG59XG5cbmNsYXNzIFRhc2tFbnRyeSBpbXBsZW1lbnRzIE5vZGUge1xuXHRwYXJlbnQ6IE5vZGU7XG5cdHRhc2s6IHN0cmluZztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzVGFiSW5kZW50KGxpbmVzOiBzdHJpbmdbXSkge1xuXHRyZXR1cm4gbGluZXMuZmluZCgobGluZSkgPT4gbGluZS5zdGFydHNXaXRoKCdcXHQnKSkgIT09IHVuZGVmaW5lZDtcbn1cbiJdfQ==